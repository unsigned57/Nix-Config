{
  pkgs,
  lib,
  config,
  ...
}:
let
  inherit (lib.generators) toLua;
  quantum = 64;
  rate = 48000;
  qr = "${toString quantum}/${toString rate}";
in
{
  environment.systemPackages = with pkgs; [
    alsa-utils
    pavucontrol
  ];

  hardware.pulseaudio.enable = false;
  security.rtkit.enable = true;

  services.pipewire = {
    enable = true;
    audio.enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    jack.enable = false;

    # Source: fufexan/nix-gaming
    extraConfig = {
      client."99-resample"."stream.properties"."resample.quality" = 15;
      client-rt."99-resample"."stream.properties"."resample.quality" = 15;
      pipewire-pulse."99-resample"."stream.properties"."resample.quality" = 15;
      pipewire = {
        "99-allowed-rates" = {
          context = {
            properties.default.clock.allowed-rates = [
              44100
              48000
              88200
              96000
              176400
              192000
              358000
              384000
              716000
              768000
            ];
          };
        };

        "99-lowlatency" = {
          context = {
            properties.default.clock.min-quantum = quantum;
            modules = [
              {
                name = "libpipewire-module-rtkit";
                flags = [
                  "ifexists"
                  "nofail"
                ];
                args = {
                  nice.level = -15;
                  rt = {
                    prio = 88;
                    time.soft = 200000;
                    time.hard = 200000;
                  };
                };
              }
              {
                name = "libpipewire-module-protocol-pulse";
                args = {
                  server.address = [ "unix:native" ];
                  pulse.min = {
                    req = qr;
                    quantum = qr;
                    frag = qr;
                  };
                };
              }
            ];

            stream.properties = {
              node.latency = qr;
              resample.quality = 1;
            };
          };
        };
      };

      pipewire-pulse = {
        "92-low-latency" = {
          "context.properties" = [
            {
              name = "libpipewire-module-protocol-pulse";
              args = { };
            }
          ];
          "pulse.properties" = {
            "pulse.min.req" = qr;
            "pulse.default.req" = qr;
            "pulse.max.req" = qr;
            "pulse.min.quantum" = qr;
            "pulse.max.quantum" = qr;
          };
          "stream.properties" = {
            "node.latency" = qr;
            "resample.quality" = 1;
          };
        };
      };
    };

    wireplumber = {
      enable = true;
      configPackages =
        let
          matches =
            toLua
              {
                multiline = false;
                indent = false;
              }
              [
                [
                  [
                    "node.name"
                    "matches"
                    "alsa_output.*"
                  ]
                ]
              ];

          apply_properties = toLua { } {
            "audio.format" = "S32LE";
            "audio.rate" = rate * 2;
            "api.alsa.period-size" = 2;
          };
        in
        [
          (pkgs.writeTextDir "share/lowlatency.lua.d/99-alsa-lowlatency.lua" ''
            -- Generated by nix-gaming
            alsa_monitor.rules = {
              {
                matches = ${matches};
                apply_properties = ${apply_properties};
              }
            }
          '')
        ];
    };
  };
}
